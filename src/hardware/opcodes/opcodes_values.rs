pub const OP_BR: u16 = 0; /* branch */
pub const OP_ADD: u16 = 1; /* add  */
pub const OP_LD: u16 = 2; /* load */
pub const OP_ST: u16 = 3; /* store */
pub const OP_JSR: u16 = 4; /* jump register */
pub const OP_AND: u16 = 5; /* bitwise and */
pub const OP_LDR: u16 = 6; /* load register */
pub const OP_STR: u16 = 7; /* store register */
pub const OP_RTI: u16 = 8; /* unused */
pub const OP_NOT: u16 = 9; /* bitwise not */
pub const OP_LDI: u16 = 10; /* load indirect */
pub const OP_STI: u16 = 11; /* store indirect */
pub const OP_JMP: u16 = 12; /* jump */
pub const OP_RES: u16 = 13; /* reserved (unused) */
pub const OP_LEA: u16 = 14; /* load effective address */
pub const OP_TRAP: u16 = 15; /* execute trap */
